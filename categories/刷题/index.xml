<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>刷题 - 分类 - 追寻原风景的博客</title>
        <link>https://xiaohao890809.github.io/categories/%E5%88%B7%E9%A2%98/</link>
        <description>刷题 - 分类 - 追寻原风景的博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>xiaohao890809@126.com (浩子)</managingEditor>
            <webMaster>xiaohao890809@126.com (浩子)</webMaster><lastBuildDate>Tue, 06 Dec 2022 19:54:45 &#43;0800</lastBuildDate><atom:link href="https://xiaohao890809.github.io/categories/%E5%88%B7%E9%A2%98/" rel="self" type="application/rss+xml" /><item>
    <title>Python 线性查找 </title>
    <link>https://xiaohao890809.github.io/python-linear-search/</link>
    <pubDate>Tue, 06 Dec 2022 19:54:45 &#43;0800</pubDate>
    <author>耗子</author>
    <guid>https://xiaohao890809.github.io/python-linear-search/</guid>
    <description><![CDATA[线性查找指按一定的顺序检查数组中每一个元素，直到找到所要寻找的特定值为止。1 线性查找 1 2 3 4 5 def linearSearch(s, x): for i in range(len(s)): if s[i] == x: return i return -1 Python 线性查找&#1]]></description>
</item>
<item>
    <title>Python 二分查找 </title>
    <link>https://xiaohao890809.github.io/python-binary-search/</link>
    <pubDate>Tue, 06 Dec 2022 19:53:45 &#43;0800</pubDate>
    <author>耗子</author>
    <guid>https://xiaohao890809.github.io/python-binary-search/</guid>
    <description><![CDATA[二分搜索是一种在有序数组中查找某一特定元素的搜索算法。1 搜索过程从数组的中间元素开始，如果中间元素正好是要查找的元素，则搜索过程结束； 如果某]]></description>
</item>
<item>
    <title>Python 冒泡排序 </title>
    <link>https://xiaohao890809.github.io/python-bubble-sort/</link>
    <pubDate>Tue, 06 Dec 2022 18:53:45 &#43;0800</pubDate>
    <author>耗子</author>
    <guid>https://xiaohao890809.github.io/python-bubble-sort/</guid>
    <description><![CDATA[冒泡排序（Bubble Sort）也是一种简单直观的排序算法。1 它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过]]></description>
</item>
<item>
    <title>Python 插入排序 </title>
    <link>https://xiaohao890809.github.io/python-insertion-sort/</link>
    <pubDate>Tue, 06 Dec 2022 18:52:46 &#43;0800</pubDate>
    <author>耗子</author>
    <guid>https://xiaohao890809.github.io/python-insertion-sort/</guid>
    <description><![CDATA[插入排序（英语：Insertion Sort）是一种简单直观的排序算法。它的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前]]></description>
</item>
<item>
    <title>Python 选择排序 </title>
    <link>https://xiaohao890809.github.io/python-selection-sort/</link>
    <pubDate>Tue, 06 Dec 2022 18:52:45 &#43;0800</pubDate>
    <author>耗子</author>
    <guid>https://xiaohao890809.github.io/python-selection-sort/</guid>
    <description><![CDATA[选择排序（Selection sort）是一种简单直观的排序算法。它的工作原理如下。1 首先在未排序序列中找到最小（大）元素，存放到排序序列的起]]></description>
</item>
<item>
    <title>力扣-单词拆分 </title>
    <link>https://xiaohao890809.github.io/word-break/</link>
    <pubDate>Tue, 06 Dec 2022 17:52:45 &#43;0800</pubDate>
    <author>耗子</author>
    <guid>https://xiaohao890809.github.io/word-break/</guid>
    <description><![CDATA[🔗 题目链接 给你一个字符串 s 和一个字符串列表 wordDict 作为字典。请你判断是否可以利用字典中出现的单词拼接出 s。 注意：不要求字典中出现的单词全部都使用，]]></description>
</item>
<item>
    <title>力扣-查询两个字符串的最长公共子串 </title>
    <link>https://xiaohao890809.github.io/longest/</link>
    <pubDate>Mon, 05 Dec 2022 17:42:45 &#43;0800</pubDate>
    <author>耗子</author>
    <guid>https://xiaohao890809.github.io/longest/</guid>
    <description><![CDATA[查询两个字符串的最长公共子串。 用 Python 实现查找两个字符串 a,b 中的最长公共子串1 Python——查询两个字符串的最长公共子串2 循环查找 思路： 通过字符]]></description>
</item>
<item>
    <title>力扣-最长回文子串 </title>
    <link>https://xiaohao890809.github.io/longest-palindromic-substring/</link>
    <pubDate>Sat, 03 Dec 2022 17:52:45 &#43;0800</pubDate>
    <author>耗子</author>
    <guid>https://xiaohao890809.github.io/longest-palindromic-substring/</guid>
    <description><![CDATA[🔗 题目链接 给你一个字符串 s，找到 s 中最长的回文子串。 示例 1： 输入：s = &ldquo;babad&rdquo; 输出：&ldquo;bab&rdquo; 解释：&ldquo;aba&]]></description>
</item>
<item>
    <title>力扣-平方数之和 </title>
    <link>https://xiaohao890809.github.io/sum-of-square-numbers/</link>
    <pubDate>Fri, 02 Dec 2022 17:52:45 &#43;0800</pubDate>
    <author>耗子</author>
    <guid>https://xiaohao890809.github.io/sum-of-square-numbers/</guid>
    <description><![CDATA[🔗 题目链接 给定一个非负整数 $c$，你要判断是否存在两个整数 $a$ 和 $b$，使得 $a^2 + b^2 = c$。 示例 1： 输入：c = 5 输出：true 解释：1 * 1 + 2 *]]></description>
</item>
<item>
    <title>力扣-字符串相加 </title>
    <link>https://xiaohao890809.github.io/add-strings/</link>
    <pubDate>Fri, 02 Dec 2022 17:42:45 &#43;0800</pubDate>
    <author>耗子</author>
    <guid>https://xiaohao890809.github.io/add-strings/</guid>
    <description><![CDATA[🔗 题目链接 给定两个字符串形式的非负整数 num1 和 num2，计算它们的和并同样以字符串形式返回。 你不能使用任何內建的用于处理大整数的库（比如 BigI]]></description>
</item>
</channel>
</rss>
