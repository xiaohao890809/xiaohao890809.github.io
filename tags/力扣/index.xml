<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>力扣 - 标签 - 追寻原风景的博客</title>
        <link>https://xiaohao890809.github.io/tags/%E5%8A%9B%E6%89%A3/</link>
        <description>力扣 - 标签 - 追寻原风景的博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>xiaohao890809@126.com (浩子)</managingEditor>
            <webMaster>xiaohao890809@126.com (浩子)</webMaster><lastBuildDate>Wed, 14 Dec 2022 13:01:45 &#43;0800</lastBuildDate><atom:link href="https://xiaohao890809.github.io/tags/%E5%8A%9B%E6%89%A3/" rel="self" type="application/rss+xml" /><item>
    <title>力扣-二分查找</title>
    <link>https://xiaohao890809.github.io/binary-search/</link>
    <pubDate>Wed, 14 Dec 2022 13:01:45 &#43;0800</pubDate>
    <author>耗子</author>
    <guid>https://xiaohao890809.github.io/binary-search/</guid>
    <description><![CDATA[🔗 题目链接 给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返]]></description>
</item>
<item>
    <title>力扣-爬楼梯</title>
    <link>https://xiaohao890809.github.io/climbing-stairs/</link>
    <pubDate>Wed, 14 Dec 2022 12:55:45 &#43;0800</pubDate>
    <author>耗子</author>
    <guid>https://xiaohao890809.github.io/climbing-stairs/</guid>
    <description><![CDATA[🔗 题目链接 假设你正在爬楼梯。需要 n 阶你才能到达楼顶。 每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？ 示例 1： 输入：n = 2 输出：]]></description>
</item>
<item>
    <title>力扣-打家劫舍 III</title>
    <link>https://xiaohao890809.github.io/house-robber-iii/</link>
    <pubDate>Wed, 14 Dec 2022 12:54:45 &#43;0800</pubDate>
    <author>耗子</author>
    <guid>https://xiaohao890809.github.io/house-robber-iii/</guid>
    <description><![CDATA[🔗 题目链接 小偷又发现了一个新的可行窃的地区。这个地区只有一个入口，我们称之为 root。 除了 root 之外，每栋房子有且只有一个“父”房子与之相连。一]]></description>
</item>
<item>
    <title>力扣-打家劫舍 II</title>
    <link>https://xiaohao890809.github.io/house-robber-ii/</link>
    <pubDate>Wed, 14 Dec 2022 12:53:45 &#43;0800</pubDate>
    <author>耗子</author>
    <guid>https://xiaohao890809.github.io/house-robber-ii/</guid>
    <description><![CDATA[🔗 题目链接 你是一个专业的小偷，计划偷窃沿街的房屋，每间房内都藏有一定的现金。这个地方所有的房屋都围成一圈，这意味着第一个房屋和最后一个房屋是]]></description>
</item>
<item>
    <title>力扣-打家劫舍</title>
    <link>https://xiaohao890809.github.io/house-robber/</link>
    <pubDate>Wed, 14 Dec 2022 12:52:45 &#43;0800</pubDate>
    <author>耗子</author>
    <guid>https://xiaohao890809.github.io/house-robber/</guid>
    <description><![CDATA[🔗 题目链接 你是一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，影响你偷窃的唯一制约因素就是相邻的房屋装有相互连通的防盗系统，如]]></description>
</item>
<item>
    <title>力扣-有效三角形的个数 </title>
    <link>https://xiaohao890809.github.io/valid-triangle-number/</link>
    <pubDate>Mon, 12 Dec 2022 22:52:45 &#43;0800</pubDate>
    <author>耗子</author>
    <guid>https://xiaohao890809.github.io/valid-triangle-number/</guid>
    <description><![CDATA[🔗 题目链接 给定一个包含非负整数的数组 nums，返回其中可以组成三角形三条边的三元组个数。 示例 1： 输入：nums = [2,2,3,4] 输出：3 解释：有效的组合是]]></description>
</item>
<item>
    <title>力扣-无重复字符的最长子串 </title>
    <link>https://xiaohao890809.github.io/longest-substring-without-repeating-characters/</link>
    <pubDate>Sun, 11 Dec 2022 17:52:45 &#43;0800</pubDate>
    <author>耗子</author>
    <guid>https://xiaohao890809.github.io/longest-substring-without-repeating-characters/</guid>
    <description><![CDATA[🔗 题目链接 给定一个字符串 s，请你找出其中不含有重复字符的最长子串的长度。 示例 1： 输入：s = &ldquo;abcabcbb&rdquo; 输出：3 解释：因为无重复字符的最长子串是 &ldq]]></description>
</item>
<item>
    <title>力扣-单词拆分 </title>
    <link>https://xiaohao890809.github.io/word-break/</link>
    <pubDate>Tue, 06 Dec 2022 17:52:45 &#43;0800</pubDate>
    <author>耗子</author>
    <guid>https://xiaohao890809.github.io/word-break/</guid>
    <description><![CDATA[🔗 题目链接 给你一个字符串 s 和一个字符串列表 wordDict 作为字典。请你判断是否可以利用字典中出现的单词拼接出 s。 注意：不要求字典中出现的单词全部都使用，]]></description>
</item>
<item>
    <title>力扣-查询两个字符串的最长公共子串 </title>
    <link>https://xiaohao890809.github.io/longest/</link>
    <pubDate>Mon, 05 Dec 2022 17:42:45 &#43;0800</pubDate>
    <author>耗子</author>
    <guid>https://xiaohao890809.github.io/longest/</guid>
    <description><![CDATA[查询两个字符串的最长公共子串。 用 Python 实现查找两个字符串 a,b 中的最长公共子串1 Python——查询两个字符串的最长公共子串2 循环查找 思路： 通过字符]]></description>
</item>
<item>
    <title>力扣-最长回文子串 </title>
    <link>https://xiaohao890809.github.io/longest-palindromic-substring/</link>
    <pubDate>Sat, 03 Dec 2022 17:52:45 &#43;0800</pubDate>
    <author>耗子</author>
    <guid>https://xiaohao890809.github.io/longest-palindromic-substring/</guid>
    <description><![CDATA[🔗 题目链接 给你一个字符串 s，找到 s 中最长的回文子串。 示例 1： 输入：s = &ldquo;babad&rdquo; 输出：&ldquo;bab&rdquo; 解释：&ldquo;aba&]]></description>
</item>
</channel>
</rss>
